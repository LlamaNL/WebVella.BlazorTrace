@using System.Diagnostics
@using WebVella.BlazorTrace.Models
@inject IWvBlazorTraceService WvBlazorTraceService
<div style="padding:10px;border:1px solid #7e22ce; background:#d8b4fe;">
	<div style="padding-top:15px">
		Test 1 Parent: @ParentCounter
	</div>
	<div style="padding-top:15px">
		Test 2 Instance 1 Counter: @_counter
	</div>
	<div style="padding-top:5px">
		<button @onclick=_countTest2>Count Test 2</button>
	</div>
</div>

@code {
	[Parameter] public int ParentCounter { get; set; } = 0;
	[Parameter] public string? InstanceTag { get; set; }
	private bool _enableTrace = true;
	private int _counter = 0;
	private List<Guid> _list = new();

	protected override void OnInitialized()
	{
		if (_enableTrace)
			WvBlazorTraceService.OnEnter(this, instanceTag: InstanceTag);

		base.OnInitialized();
		for (int i = 0; i < 5; i++)
		{
			_list.Add(Guid.NewGuid());
		}

		if (_enableTrace)
			WvBlazorTraceService.OnExit(this, instanceTag: InstanceTag, options: new WvTraceMethodOptions
				{
					MemoryLimitTotalBytes = 1,
					MemoryLimitDeltaBytes = 1,
					CallLimit = 1,
					DurationLimitMS = 1
				});
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (_enableTrace)
			WvBlazorTraceService.OnEnter(this, firstRender: firstRender, instanceTag: InstanceTag);

		base.OnAfterRender(firstRender);
		await Task.Delay(50);

		if (_enableTrace)
			WvBlazorTraceService.OnExit(this, firstRender: firstRender, instanceTag: InstanceTag);
	}

	protected override void OnParametersSet()
	{
		if (_enableTrace)
			WvBlazorTraceService.OnEnter(this, instanceTag: InstanceTag);

		base.OnParametersSet();

		if (_enableTrace)
			WvBlazorTraceService.OnExit(this, instanceTag: InstanceTag);
	}

	protected override bool ShouldRender()
	{
		if (_enableTrace)
			WvBlazorTraceService.OnEnter(this, instanceTag: InstanceTag);

		if (_enableTrace)
			WvBlazorTraceService.OnExit(this, instanceTag: InstanceTag);
		return base.ShouldRender();
	}

	private void _countTest2()
	{
		if (_enableTrace)
			WvBlazorTraceService.OnEnter(component: this, instanceTag: InstanceTag);

		_counter++;

		if (_enableTrace)
			WvBlazorTraceService.OnExit(component: this, instanceTag: InstanceTag);
	}
}
