@using System.Diagnostics
@using WebVella.BlazorTrace
@using WebVella.BlazorTrace.Models
@attribute [WvBlazorTrace]
@* @inject IWvBlazorTraceService WvBlazorTraceService *@
<div style="padding:10px;border:1px solid #7e22ce; background:#d8b4fe;">
	<div style="padding-top:15px">
		Test 1 Parent: @ParentCounter
	</div>
	<div style="padding-top:15px">
		Test 2 Instance 1 Counter: @_counter
	</div>
	<div style="padding-top:5px">
		<button @onclick=_countTest2>Count Test 2</button>
	</div>
</div>

@code {
	[Parameter] public int ParentCounter { get; set; } = 0;
	[Parameter] public string? InstanceTag { get; set; }
	private int _counter = 0;
	private List<Guid> _list = new();
	private static string _staticTest = Guid.NewGuid().ToString();

	protected override void OnInitialized()
	{
		base.OnInitialized();
		for (int i = 0; i < 5; i++)
		{
			_list.Add(Guid.NewGuid());
			//WvBlazorTraceService.OnSignal(this, signalName: "test-signal", instanceTag: InstanceTag,
			// customData: $"index={i}",
			// options: new WvTraceSignalOptions
			// {
			// 	CallLimit = 5 - i
			// });
		}
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		base.OnAfterRender(firstRender);
		await Task.Delay(50);
	}

	private void _countTest2()
	{
		_counter++;
	}
}
